<tool id="dimspy_sample_filter" name="Sample Filter" version="0.1.0">
    <description>Remove peaks that fail to appear in x-out-of-n (biological) samples</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <command><![CDATA[
        dimspy sample-filter
        --input "$hdf5_file_in"
        --output "$hdf5_file_out"
        --min-fraction $min_fraction
        ${within}
        #if $rsd_threshold
            --rsd-threshold $rsd_threshold
        #end if
        #if $qc_label
            --qc-label $qc_label
        #end if
        #if $hdf5_to_txt.standard
            &&
            @HDF5_PM_TO_TXT@
        #end if
        #if $hdf5_to_txt.comprehensive
            &&
            @HDF5_PM_TO_TXT_COMPREHENSIVE@
        #end if
    ]]></command>
    <inputs>
        <param name="hdf5_file_in" type="data" format="h5" label="Peak intensity matrix (HDF5 file)" help="" argument="--input"/>
        <param name="within" type="boolean" checked="false" truevalue="--within" falsevalue="" label="Apply sample filter within each sample class."  help="" argument="--within"/>
        <param name="min_fraction" min="0" max="1.0" type="float" value="0.5" label="Minimum fraction" help="Minimum fraction (i.e. percentage) of samples a peak has to be present" argument="--min-fraction"/>
        <param name="rsd_threshold" type="hidden" value="" label="Relative standard deviation threshold" help="Leave empty to skip this step" argument="--rsd-threshold"/>
        <param name="qc_label" type="hidden" value="" label="Label for the QC sample (RSD filter only)" help="Peaks that have a larger RSD than the QC peaks are removed (Leave empty to skip this step)." argument="--qc-label"/>
        <param name="delimiter" type="hidden" value="tab" argument="--delimiter"/>
        <expand macro="hdf5_pm_to_txt" />
    </inputs>
    <outputs>
        <data name="hdf5_file_out" format="h5" label="${tool.name} on ${on_string}: Peak matrix (HDF5 file)"/>
        <data name="matrix_file_out" format="tsv" label="${tool.name} on ${on_string}: Peak matrix">
            <filter>hdf5_to_txt["standard"] is True</filter>
        </data>
        <data name="matrix_comprehensive_file_out" format="tsv" label="${tool.name} on ${on_string}: Peak matrix (comprehensive)" >
            <filter>hdf5_to_txt["comprehensive"] is True</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="hdf5_file_in" value="pm_as_bf.h5" ftype="h5"/>
            <param name="within" value=""/>
            <param name="min_fraction" value="0.5"/>
            <param name="rsd_threshold" value=""/>
            <param name="qc_label" value=""/>
            <param name="delimiter" value="tab"/>
            <param name="hdf5_to_txt|standard" value="True"/>
            <param name="hdf5_to_txt|comprehensive" value="True"/>
            <param name="hdf5_to_txt|representation_samples" value="rows"/>
            <param name="hdf5_to_txt|matrix_attr" value="intensity"/>
            <output name="hdf5_file_out" file="pm_as_bf_sf.h5" ftype="h5" compare="sim_size"/>
            <output name="matrix_file_out" file="peak_matrix_as_bf_sf.txt" ftype="tsv"/>
            <output name="matrix_comprehensive_file_out" file="peak_matrix_as_bf_sf_compr.txt" ftype="tsv"/>
        </test>
        <test>
            <param name="hdf5_file_in" value="pm_as_bf.h5" ftype="h5"/>
            <param name="within" value=""/>
            <param name="min_fraction" value="0.5"/>
            <param name="rsd_threshold" value=""/>
            <param name="qc_label" value=""/>
            <param name="delimiter" value="tab"/>
            <param name="hdf5_to_txt|standard" value="True"/>
            <param name="hdf5_to_txt|comprehensive" value="True"/>
            <param name="hdf5_to_txt|representation_samples" value="columns"/>
            <param name="hdf5_to_txt|matrix_attr" value="mz"/>
            <output name="hdf5_file_out" file="pm_as_bf_sf.h5" ftype="h5" compare="sim_size"/>
            <output name="matrix_file_out" file="peak_matrix_as_bf_sf_mz.txt" ftype="tsv"/>
            <output name="matrix_comprehensive_file_out" file="peak_matrix_as_bf_sf_mz_compr.txt" ftype="tsv"/>
        </test>
    </tests>
    <help>
    .. class:: infomark

**Description**

| Use this tool to align hdf5-formatted peaklists according to their constituent mass spectral peaks.
| 
| In the DIMS analysis workflow, align samples typically follows 'replicate_filter'. This tool may, however, be used to align any hdf5-formatted peaklists (e.g. aligning individual peaklists for each replicate of a sample).
|

.. class:: infomark

**Parameters**

1) **Peak intensity matrix (HDF5 file)** (REQUIRED)

	| A hdf5-formatted peak matrix, typically imported from the 'Align samples' tool.
		
2) **Apply sample filter within each class** (REQUIRED; default = 'No')

	| Boolean toggle where:
	
		* **Yes** corresponds to checking, on a class-by-class basis, whether greater-than the user-defined 'Minimum fraction' of samples within an experimental class contain an intensity value for a specific mass spectral peak. If less than this number, the intensity value in that class is set to zero.
		* **No** corresponds to checking, across ALL classes simultaneously, whether greater-than the user-defined 'Minimum fraction' of samples contain an intensity value for a specific mass spectral peak. If less than this number, the intensity value is ALL classes is set to zero.
		
3) **Minimum fraction** (REQUIRED; default = 0.5)

	| Numeric value ranging from 0 to 1.
	
		* A value of 0 corresponds to a minimum of 0 samples across or within experimental classes (as defined by the 'Sample filter within each class' toggle) having an intensity value of greater-than 0.
		* A value of 1 correspond to 100% of samples across or within experimental classes (as defined by the 'Sample filter within each class' toggle) having an intensity value of greater-than 0.

.. class:: infomark

**Show options for output** (OPTIONAL)

1) **Standard output** (default = 'No')

	| Boolean toggle where selection of: 
	
		* 'Yes' will generate a .txt formatted peak matrix. The data contained in this peak matrix is defined by the user-specified option in the 'Comprehensive output' parameters box.
		
		
		* 'No' will prevent the creation of a .txt formatted peak matrix.

2) **Comprehensive output** (default = 'No')
	
	| Boolean toggle where selection of:
	
		* 'Yes' generates a peak matrix containing the m/z, intensity, coverage, purity, signal-to-noise ratio and other metrics associated with the aligned peaks.
		
		
		* 'No' generates a peak matrix containing only the m/z and intensity for all clustered (aligned) features. This option ensures compatibility with down-stream statistical analysis tools.

3) **Should rows or columns represent the samples?** (default = 'rows')
	
	| Binary toggle (default = 'rows') where selection of:
	
		* 'rows' puts sample information in to the rows and m/z values (for aligned mass spectral peaks) in to columns of any output peak matrix.
		
		
		* 'columns' puts sample information in the columns and m/z values (for aligned mass spectral peaks) in to the rows of any output peak matrix.

4) **Matrix type**
	
	| Use this option to define which metric is inserted in to the cells of the output peak matrix (if any). For each mass spectral peak and sample combination, selection of:
	
		* 'Intensity' writes the absolute peak intensity to the peak matrix.
		* 'm/z' writes the m/z value to the peak matrix.
		* Signal-to-noise ratio (SNR) writes the signal-to-noise ratio to the peak matrix. 


**Output file(s)**

1)  A peak matrix comprising samples on one axis and m/z values on the perpendicular axis
	* Tab-delimited text file containing a numeric data matrix, with . as decimal, and NA for missing values.
	* File only created if user toggles 'Standard Output' to 'Yes'
	* By default, samples are in rows and peaks are in columns. Altering the 'Should rows or columns represent samples' toggle will transpose this matrix.
	
2) 'A peaklist for each file specified in the filelist'
	* Tab-delimited text file containing a numeric data matrix, with . as decimal, and NA for missing values.
	* Includes additional information, including the signal-to-noise ratio for each peak in the matrix.

| 

.. class:: infomark

**R packages used within this tool**
    
    - None

.. class:: infomark

**Github respository (source code)**

	https://github.com/computational-metabolomics/dimspy-galaxy.git

.. class:: infomark

**Developers and Contributors**

* **Ralf Weber (r.j.weber@bham.ac.uk) - University of Birmingham (UK)**
* **Albert Zhou (@bham.ac.uk) - University of Birmingham (UK)**
* **Martin R. Jones (m.r.jones.1@bham.ac.uk) - University of Birmingham (UK)**

|
   
    </help>
    <expand macro="citations" />
</tool>

